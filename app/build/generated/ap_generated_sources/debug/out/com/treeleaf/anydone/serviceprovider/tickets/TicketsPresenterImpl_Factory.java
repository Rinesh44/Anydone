// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.tickets;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class TicketsPresenterImpl_Factory implements Factory<TicketsPresenterImpl> {
  private final Provider<TicketsRepository> ticketsRepositoryProvider;

  public TicketsPresenterImpl_Factory(Provider<TicketsRepository> ticketsRepositoryProvider) {
    this.ticketsRepositoryProvider = ticketsRepositoryProvider;
  }

  @Override
  public TicketsPresenterImpl get() {
    return provideInstance(ticketsRepositoryProvider);
  }

  public static TicketsPresenterImpl provideInstance(
      Provider<TicketsRepository> ticketsRepositoryProvider) {
    return new TicketsPresenterImpl(ticketsRepositoryProvider.get());
  }

  public static TicketsPresenterImpl_Factory create(
      Provider<TicketsRepository> ticketsRepositoryProvider) {
    return new TicketsPresenterImpl_Factory(ticketsRepositoryProvider);
  }

  public static TicketsPresenterImpl newTicketsPresenterImpl(TicketsRepository ticketsRepository) {
    return new TicketsPresenterImpl(ticketsRepository);
  }
}
