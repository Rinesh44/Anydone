// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.setting.currency;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class CurrencyPresenterImpl_Factory implements Factory<CurrencyPresenterImpl> {
  private final Provider<CurrencyRepository> currencyRepositoryProvider;

  public CurrencyPresenterImpl_Factory(Provider<CurrencyRepository> currencyRepositoryProvider) {
    this.currencyRepositoryProvider = currencyRepositoryProvider;
  }

  @Override
  public CurrencyPresenterImpl get() {
    return provideInstance(currencyRepositoryProvider);
  }

  public static CurrencyPresenterImpl provideInstance(
      Provider<CurrencyRepository> currencyRepositoryProvider) {
    return new CurrencyPresenterImpl(currencyRepositoryProvider.get());
  }

  public static CurrencyPresenterImpl_Factory create(
      Provider<CurrencyRepository> currencyRepositoryProvider) {
    return new CurrencyPresenterImpl_Factory(currencyRepositoryProvider);
  }

  public static CurrencyPresenterImpl newCurrencyPresenterImpl(
      CurrencyRepository currencyRepository) {
    return new CurrencyPresenterImpl(currencyRepository);
  }
}
