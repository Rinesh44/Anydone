// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.base.fragment;

import com.treeleaf.anydone.serviceprovider.base.presenter.BasePresenter;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class BaseFragment_MembersInjector<T extends BasePresenter>
    implements MembersInjector<BaseFragment<T>> {
  private final Provider<T> presenterProvider;

  public BaseFragment_MembersInjector(Provider<T> presenterProvider) {
    this.presenterProvider = presenterProvider;
  }

  public static <T extends BasePresenter> MembersInjector<BaseFragment<T>> create(
      Provider<T> presenterProvider) {
    return new BaseFragment_MembersInjector<T>(presenterProvider);
  }

  @Override
  public void injectMembers(BaseFragment<T> instance) {
    injectPresenter(instance, presenterProvider.get());
  }

  public static <T extends BasePresenter> void injectPresenter(
      BaseFragment<T> instance, T presenter) {
    instance.presenter = presenter;
  }
}
