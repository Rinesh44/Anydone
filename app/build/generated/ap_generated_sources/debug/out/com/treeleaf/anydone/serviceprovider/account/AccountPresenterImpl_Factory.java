// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.account;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class AccountPresenterImpl_Factory implements Factory<AccountPresenterImpl> {
  private final Provider<AccountRepository> accountRepositoryProvider;

  public AccountPresenterImpl_Factory(Provider<AccountRepository> accountRepositoryProvider) {
    this.accountRepositoryProvider = accountRepositoryProvider;
  }

  @Override
  public AccountPresenterImpl get() {
    return provideInstance(accountRepositoryProvider);
  }

  public static AccountPresenterImpl provideInstance(
      Provider<AccountRepository> accountRepositoryProvider) {
    return new AccountPresenterImpl(accountRepositoryProvider.get());
  }

  public static AccountPresenterImpl_Factory create(
      Provider<AccountRepository> accountRepositoryProvider) {
    return new AccountPresenterImpl_Factory(accountRepositoryProvider);
  }

  public static AccountPresenterImpl newAccountPresenterImpl(AccountRepository accountRepository) {
    return new AccountPresenterImpl(accountRepository);
  }
}
