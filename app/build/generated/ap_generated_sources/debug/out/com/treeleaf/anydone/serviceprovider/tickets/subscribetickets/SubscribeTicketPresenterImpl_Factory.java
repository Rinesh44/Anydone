// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.tickets.subscribetickets;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class SubscribeTicketPresenterImpl_Factory
    implements Factory<SubscribeTicketPresenterImpl> {
  private final Provider<SubscribeTicketRepository> subscribeTicketRepositoryProvider;

  public SubscribeTicketPresenterImpl_Factory(
      Provider<SubscribeTicketRepository> subscribeTicketRepositoryProvider) {
    this.subscribeTicketRepositoryProvider = subscribeTicketRepositoryProvider;
  }

  @Override
  public SubscribeTicketPresenterImpl get() {
    return provideInstance(subscribeTicketRepositoryProvider);
  }

  public static SubscribeTicketPresenterImpl provideInstance(
      Provider<SubscribeTicketRepository> subscribeTicketRepositoryProvider) {
    return new SubscribeTicketPresenterImpl(subscribeTicketRepositoryProvider.get());
  }

  public static SubscribeTicketPresenterImpl_Factory create(
      Provider<SubscribeTicketRepository> subscribeTicketRepositoryProvider) {
    return new SubscribeTicketPresenterImpl_Factory(subscribeTicketRepositoryProvider);
  }

  public static SubscribeTicketPresenterImpl newSubscribeTicketPresenterImpl(
      SubscribeTicketRepository subscribeTicketRepository) {
    return new SubscribeTicketPresenterImpl(subscribeTicketRepository);
  }
}
