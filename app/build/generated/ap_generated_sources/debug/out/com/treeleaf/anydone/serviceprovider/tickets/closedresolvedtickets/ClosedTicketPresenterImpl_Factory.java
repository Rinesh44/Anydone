// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.tickets.closedresolvedtickets;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ClosedTicketPresenterImpl_Factory implements Factory<ClosedTicketPresenterImpl> {
  private final Provider<ClosedTicketRepository> closedTicketRepositoryProvider;

  public ClosedTicketPresenterImpl_Factory(
      Provider<ClosedTicketRepository> closedTicketRepositoryProvider) {
    this.closedTicketRepositoryProvider = closedTicketRepositoryProvider;
  }

  @Override
  public ClosedTicketPresenterImpl get() {
    return provideInstance(closedTicketRepositoryProvider);
  }

  public static ClosedTicketPresenterImpl provideInstance(
      Provider<ClosedTicketRepository> closedTicketRepositoryProvider) {
    return new ClosedTicketPresenterImpl(closedTicketRepositoryProvider.get());
  }

  public static ClosedTicketPresenterImpl_Factory create(
      Provider<ClosedTicketRepository> closedTicketRepositoryProvider) {
    return new ClosedTicketPresenterImpl_Factory(closedTicketRepositoryProvider);
  }

  public static ClosedTicketPresenterImpl newClosedTicketPresenterImpl(
      ClosedTicketRepository closedTicketRepository) {
    return new ClosedTicketPresenterImpl(closedTicketRepository);
  }
}
