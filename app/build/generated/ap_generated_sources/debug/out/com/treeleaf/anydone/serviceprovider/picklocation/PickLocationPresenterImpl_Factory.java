// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.picklocation;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class PickLocationPresenterImpl_Factory implements Factory<PickLocationPresenterImpl> {
  private final Provider<PickLocationRepository> pickLocationRepositoryProvider;

  public PickLocationPresenterImpl_Factory(
      Provider<PickLocationRepository> pickLocationRepositoryProvider) {
    this.pickLocationRepositoryProvider = pickLocationRepositoryProvider;
  }

  @Override
  public PickLocationPresenterImpl get() {
    return provideInstance(pickLocationRepositoryProvider);
  }

  public static PickLocationPresenterImpl provideInstance(
      Provider<PickLocationRepository> pickLocationRepositoryProvider) {
    return new PickLocationPresenterImpl(pickLocationRepositoryProvider.get());
  }

  public static PickLocationPresenterImpl_Factory create(
      Provider<PickLocationRepository> pickLocationRepositoryProvider) {
    return new PickLocationPresenterImpl_Factory(pickLocationRepositoryProvider);
  }

  public static PickLocationPresenterImpl newPickLocationPresenterImpl(
      PickLocationRepository pickLocationRepository) {
    return new PickLocationPresenterImpl(pickLocationRepository);
  }
}
