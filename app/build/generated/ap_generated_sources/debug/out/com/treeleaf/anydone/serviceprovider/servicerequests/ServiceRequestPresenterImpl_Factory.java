// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.servicerequests;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ServiceRequestPresenterImpl_Factory
    implements Factory<ServiceRequestPresenterImpl> {
  private final Provider<ServiceRequestRepository> serviceRequestRepositoryProvider;

  public ServiceRequestPresenterImpl_Factory(
      Provider<ServiceRequestRepository> serviceRequestRepositoryProvider) {
    this.serviceRequestRepositoryProvider = serviceRequestRepositoryProvider;
  }

  @Override
  public ServiceRequestPresenterImpl get() {
    return provideInstance(serviceRequestRepositoryProvider);
  }

  public static ServiceRequestPresenterImpl provideInstance(
      Provider<ServiceRequestRepository> serviceRequestRepositoryProvider) {
    return new ServiceRequestPresenterImpl(serviceRequestRepositoryProvider.get());
  }

  public static ServiceRequestPresenterImpl_Factory create(
      Provider<ServiceRequestRepository> serviceRequestRepositoryProvider) {
    return new ServiceRequestPresenterImpl_Factory(serviceRequestRepositoryProvider);
  }

  public static ServiceRequestPresenterImpl newServiceRequestPresenterImpl(
      ServiceRequestRepository serviceRequestRepository) {
    return new ServiceRequestPresenterImpl(serviceRequestRepository);
  }
}
