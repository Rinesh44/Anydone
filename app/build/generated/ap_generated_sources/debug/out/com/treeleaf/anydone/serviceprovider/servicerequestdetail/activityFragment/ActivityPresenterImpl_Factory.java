// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.servicerequestdetail.activityFragment;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ActivityPresenterImpl_Factory implements Factory<ActivityPresenterImpl> {
  private final Provider<ActivityRepository> activityRepositoryProvider;

  public ActivityPresenterImpl_Factory(Provider<ActivityRepository> activityRepositoryProvider) {
    this.activityRepositoryProvider = activityRepositoryProvider;
  }

  @Override
  public ActivityPresenterImpl get() {
    return provideInstance(activityRepositoryProvider);
  }

  public static ActivityPresenterImpl provideInstance(
      Provider<ActivityRepository> activityRepositoryProvider) {
    return new ActivityPresenterImpl(activityRepositoryProvider.get());
  }

  public static ActivityPresenterImpl_Factory create(
      Provider<ActivityRepository> activityRepositoryProvider) {
    return new ActivityPresenterImpl_Factory(activityRepositoryProvider);
  }

  public static ActivityPresenterImpl newActivityPresenterImpl(
      ActivityRepository activityRepository) {
    return new ActivityPresenterImpl(activityRepository);
  }
}
