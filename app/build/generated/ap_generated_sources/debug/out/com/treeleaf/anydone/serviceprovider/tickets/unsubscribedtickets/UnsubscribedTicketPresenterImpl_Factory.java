// Generated by Dagger (https://google.github.io/dagger).
package com.treeleaf.anydone.serviceprovider.tickets.unsubscribedtickets;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class UnsubscribedTicketPresenterImpl_Factory
    implements Factory<UnsubscribedTicketPresenterImpl> {
  private final Provider<UnsubscribedTicketRepository> unsubscribedTicketRepositoryProvider;

  public UnsubscribedTicketPresenterImpl_Factory(
      Provider<UnsubscribedTicketRepository> unsubscribedTicketRepositoryProvider) {
    this.unsubscribedTicketRepositoryProvider = unsubscribedTicketRepositoryProvider;
  }

  @Override
  public UnsubscribedTicketPresenterImpl get() {
    return provideInstance(unsubscribedTicketRepositoryProvider);
  }

  public static UnsubscribedTicketPresenterImpl provideInstance(
      Provider<UnsubscribedTicketRepository> unsubscribedTicketRepositoryProvider) {
    return new UnsubscribedTicketPresenterImpl(unsubscribedTicketRepositoryProvider.get());
  }

  public static UnsubscribedTicketPresenterImpl_Factory create(
      Provider<UnsubscribedTicketRepository> unsubscribedTicketRepositoryProvider) {
    return new UnsubscribedTicketPresenterImpl_Factory(unsubscribedTicketRepositoryProvider);
  }

  public static UnsubscribedTicketPresenterImpl newUnsubscribedTicketPresenterImpl(
      UnsubscribedTicketRepository unsubscribedTicketRepository) {
    return new UnsubscribedTicketPresenterImpl(unsubscribedTicketRepository);
  }
}
